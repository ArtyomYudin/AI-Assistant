services:
  # === LLM Qwen –Ω–∞ GPU0 ===
  llm:
    image: nalanzeyu/vllm-gfx906
    container_name: llm
    command: >
      vllm serve /models/Qwen/Qwen3-8B-AWQ
      --gpu-memory-utilization 0.85
      --max-model-len 12000
      --max-num-batched-tokens 12000
      --max-num-seqs 16
      --enable-prefix-caching
      --disable-log-requests
      --port 8001
      --served-model-name Qwen3-8B-AWQ
    environment:
      - CUDA_VISIBLE_DEVICES=0
    ports:
      - "8001:8001"
    volumes:
      - /storage/models:/models
    shm_size: "16g"
    ipc: host
    devices:
      - /dev/kfd
      - /dev/dri
    group_add:
      - video
    cap_add:
      - SYS_PTRACE
    security_opt:
      - seccomp=unconfined
      - apparmor=unconfined
#  llm:
#    build:
#      context: ./docker/llama_cpp
#      dockerfile: Dockerfile
#    container_name: llm-gguf
#    ports:
#      - "8001:8001"
#    volumes:
#      - /storage/models/Qwen/Qwen3-8B-GGUF/Qwen3-8B-Q4_K_M.gguf:/models/model.gguf
#    devices:
#      - /dev/kfd
#      - /dev/dri
#    group_add:
#      - video
#    environment:
#      - HSA_OVERRIDE_GFX_VERSION=9.0.6  # –≤–∞–∂–Ω–æ –¥–ª—è gfx906!
#      - ROCR_VISIBLE_DEVICES=0
#    cap_add:
#      - SYS_PTRACE
#    security_opt:
#      - seccomp=unconfined
#      - apparmor=unconfined
#    shm_size: "16g"
#    ipc: host

  # === FRIDA Embeddings –Ω–∞ GPU1 ===
  frida-embeddings:
    build:
      context: ./docker/frida-embed
      dockerfile: Dockerfile
    container_name: embeddings
    restart: unless-stopped
    devices:
      - /dev/kfd
      - /dev/dri
    group_add:
      - video
    shm_size: "8g"
    security_opt:
      - seccomp=unconfined
      - apparmor=unconfined
    cap_add:
      - SYS_PTRACE
    environment:
      - HIP_VISIBLE_DEVICES=1
      - CUDA_VISIBLE_DEVICES=1
      - MODEL_NAME=ai-forever/FRIDA
    volumes:
      - /storage/models:/models
    ports:
      - "8000:8000"
    command: >
      uvicorn server:app --host 0.0.0.0 --port 8000

  # === BGE Reranker –Ω–∞ GPU1 ===
  reranker:
    image: nalanzeyu/vllm-gfx906
    container_name: reranker
    command: >
      vllm serve /models/BAAI/bge-reranker-v2-m3
      --swap-space 4
      --disable-log-requests
      --dtype float16
      --gpu-memory-utilization=0.55
      --max-num-batched-tokens 8192
      --max-num-seqs 32
      --port 8002
      --served-model-name bge-reranker-v2-m3
    environment:
      - CUDA_VISIBLE_DEVICES=1
      - VLLM_USE_V1=0
      - VLLM_USE_TRITON_FLASH_ATTN=0
    ports:
      - "8002:8002"
    volumes:
      - /storage/models:/models
    shm_size: "16g"
    ipc: host
    devices:
      - /dev/kfd
      - /dev/dri
    group_add:
      - video
    cap_add:
      - SYS_PTRACE
    security_opt:
      - seccomp=unconfined
      - apparmor=unconfined

# === Milvus (Vector DB) ===
  milvus:
    image: milvusdb/milvus:v2.6.2
    container_name: milvus
    restart: unless-stopped
    environment:
      - MILVUS_LOG_LEVEL=info
      - ETCD_ENDPOINTS=etcd:2379
      - MINIO_ADDRESS=minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
      - MINIO_BUCKET_NAME=milvus
      - MQ_TYPE=woodpecker
    command: ["milvus", "run", "standalone"]
    security_opt:
      - seccomp:unconfined
    ports:
      - "19530:19530"   # gRPC
      - "9091:9091"     # REST
    volumes:
      - /storage/milvus:/var/lib/milvus
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9091/healthz" ]
      interval: 30s
      start_period: 90s
      timeout: 20s
      retries: 3
    depends_on:
      - etcd
      - minio

  etcd:
    image: quay.io/coreos/etcd:v3.5.18
    container_name: milvus-etcd
    environment:
      - ETCD_AUTO_COMPACTION_RETENTION=1
      - ETCD_QUOTA_BACKEND_BYTES=4294967296
      - ETCD_SNAPSHOT_COUNT=50000
    command: etcd -advertise-client-urls=http://etcd:2379 -listen-client-urls http://0.0.0.0:2379 --data-dir /etcd
    healthcheck:
      test: [ "CMD", "etcdctl", "endpoint", "health" ]
      interval: 30s
      timeout: 20s
      retries: 3
    ports:
      - "2379:2379"
    volumes:
      - /storage/etcd:/etcd

  minio:
    image: minio/minio:RELEASE.2024-12-18T13-15-44Z
    container_name: milvus-minio
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    command: minio server /minio_data --console-address ":9001"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9001/minio/health/live" ]
      interval: 30s
      timeout: 20s
      retries: 3
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - /storage/minio:/minio_data

  # === Redis (–∫—ç—à + –∏—Å—Ç–æ—Ä–∏—è —á–∞—Ç–∞) ===
  redis:
    image: redis:latest
    container_name: redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - /storage/redis:/data

  # RAG FastAPI
  rag-api:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: rag-api
    restart: unless-stopped
    environment:
      - PYTHONUNBUFFERED=1
      - LOG_LEVEL=DEBUG
      - MAX_HISTORY_MESSAGES=1
      - LLM_MAX_TOKEN=2048
      - MAX_CONTEXT_TOKENS=8192
      - RESERVED_FOR_COMPLETION=1024
    ports:
      - "8008:8008"
    command: >
      uvicorn api.app:app --host 0.0.0.0 --port 8008 --log-level debug

  # Gradio UI
  rag-gradio:
      build:
        context: .
        dockerfile: docker/Dockerfile  # –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ—Ç –∂–µ Dockerfile
      container_name: rag-gradio
      restart: unless-stopped
      environment:
        - PYTHONUNBUFFERED=1
      ports:
        - "7860:7860"  # Gradio –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é —Å–ª—É—à–∞–µ—Ç 7860
      command: python -m ui.app  # üëà –∑–∞–ø—É—Å–∫ Gradio-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
      depends_on:
        - rag-api